

vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-269030.cct on host iron-gym

type: Find All Valid Math Expressions

proposed answer: 9+1+6+7+0+2+45-8-4,9+1+6+7+0+2-4+5+8*4,9+1+6+7+0+2*4-5+8*4,9+1+6+7+2+45-8-4,9+1+6+7+2-4+5+8*4,9+1+6+7+2*4-5+8*4,9+1+6+7-0+2+45-8-4,9+1+6+7-0+2-4+5+8*4,9+1+6+7-0+2*4-5+8*4,9+1+6+7*0+2+4+5*8-4,9+1+6+7*0+2-4+5*8+4,9+1+6+70+2*4-5*8+4,9+1+6+70-2*4*5+8+4,9+1+6-7+0*2+45+8-4,9+1+6-7-0*2+45+8-4,9+1+6-7*0+2+4+5*8-4,9+1+6-7*0+2-4+5*8+4,9+1+6*7+0+2*45-84,9+1+6*7+0-2+4*5-8-4,9+1+6*7+2*45-84,9+1+6*7-0+2*45-84,9+1+6*7-0-2+4*5-8-4,9+1+6*7-2+4*5-8-4,9+1+6*7*0-2-4+58-4,9+1+6*7*0*2+4+5*8+4,9+1+67+0+2-4-5-8-4,9+1+67+0+2*4+5-8*4,9+1+67+2-4-5-8-4,9+1+67+2*4+5-8*4,9+1+67-0+2-4-5-8-4,9+1+67-0+2*4+5-8*4,9+1+67*0-2-4+58-4,9+1+67*0*2+4+5*8+4,9+1-6+7+0-2+45+8-4,9+1-6+7-0-2+45+8-4,9+1-6+7-2+45+8-4,9+1-6+7*0+2+4*5+8*4,9+1-6+7*0-2*4+58+4,9+1-6+7*0*2*4+58-4,9+1-6+7*0*24+58-4,9+1-6+7*2+4+5*8-4,9+1-6+7*2-4+5*8+4,9+1-6-7+0+24+5+8*4,9+1-6-7+24+5+8*4,9+1-6-7-0+24+5+8*4,9+1-6-7*0+2+4*5+8*4,9+1-6-7*0-2*4+58+4,9+1-6-7*0*2*4+58-4,9+1-6-7*0*24+58-4,9+1-6-70+2*4*5+84,9+1-6-70+24*5+8-4,9+1-6*7*0-2-4+58-4,9+1-6*7*0*2+4+5*8+4,9+1-6*70+2*4*58+4,9+1-67*0-2-4+58-4,9+1-67*0*2+4+5*8+4,9+1-67*2*4+584,9+1*6+7+0+2*4*5-8+4,9+1*6+7+0+24*5-84,9+1*6+7+0-2*4+5*8+4,9+1*6+7+0*2*4+5*8-4,9+1*6+7+0*24+5*8-4,9+1*6+7+2*4*5-8+4,9+1*6+7+24*5-84,9+1*6+7-0+2*4*5-8+4,9+1*6+7-0+24*5-84,9+1*6+7-0-2*4+5*8+4,9+1*6+7-0*2*4+5*8-4,9+1*6+7-0*24+5*8-4,9+1*6+7-2*4+5*8+4,9+1*6+7*0+2+4+5+8*4,9+1*6+7*0+2+45-8+4,9+1*6-7+0+2+4+5*8+4,9+1*6-7+0-2+4*5+8*4,9+1*6-7+0*2-4+58-4,9+1*6-7+2+4+5*8+4,9+1*6-7-0+2+4+5*8+4,9+1*6-7-0-2+4*5+8*4,9+1*6-7-0*2-4+58-4,9+1*6-7-2+4*5+8*4,9+1*6-7*0+2+4+5+8*4,9+1*6-7*0+2+45-8+4,9+1*6-7*2+45+8+4,9+1*6-70+24+5+84,9+1*6*7+0+2+4+5-8+4,9+1*6*7+0+2-4+5+8-4,9+1*6*7+0+2*4-5+8-4,9+1*6*7+0+24-5-8-4,9+1*6*7+0*2*4-5+8+4,9+1*6*7+0*24-5+8+4,9+1*6*7+2+4+5-8+4,9+1*6*7+2-4+5+8-4,9+1*6*7+2*4-5+8-4,9+1*6*7+24-5-8-4,9+1*6*7-0+2+4+5-8+4,9+1*6*7-0+2-4+5+8-4,9+1*6*7-0+2*4-5+8-4,9+1*6*7-0+24-5-8-4,9+1*6*7-0*2*4-5+8+4,9+1*6*7-0*24-5+8+4,9+1*6*7*0*2+45+8-4,9+1*67+0-2-4*5+8-4,9+1*67-0-2-4*5+8-4,9+1*67-2-4*5+8-4,9+1*67*0*2+45+8-4,9+1*67*2+4-5-84,9+16+7+0+2+4*5+8-4,9+16+7+2+4*5+8-4,9+16+7-0+2+4*5+8-4,9+16+7*0+2+4-5+8*4,9+16+7*0+24+5+8-4,9+16+7*0*2+45-8-4,9+16+7*0*2-4+5+8*4,9+16+70+2+45-84,9+16+72+45-84,9+16-7+0*2+4+5*8-4,9+16-7+0*2-4+5*8+4,9+16-7-0*2+4+5*8-4,9+16-7-0*2-4+5*8+4,9+16-7*0+2+4-5+8*4,9+16-7*0+24+5+8-4,9+16-7*0*2+45-8-4,9+16-7*0*2-4+5+8*4,9+16-7*2*4+5+84,9+16-70+24-5+84,9+16*7*0*2+45+8-4,9+167*0*2+45+8-4,9-1+6+7+0-2-45+84,9-1+6+7+0*2*4+5+8*4,9-1+6+7+0*24+5+8*4,9-1+6+7-0-2-45+84,9-1+6+7-0*2*4+5+8*4,9-1+6+7-0*24+5+8*4,9-1+6+7-2-45+84,9-1+6+7*0+2*4+5*8-4,9-1+6+7*0+2*4*5+8-4,9-1+6+7*0-2*4*5+84,9-1+6+7*0*2*4+5*8+4,9-1+6+7*0*24+5*8+4,9-1+6+70-2-4*5-8+4,9-1+6-7+0+2+45+8-4,9-1+6-7+0+24-5+8*4,9-1+6-7+2+45+8-4,9-1+6-7+24-5+8*4,9-1+6-7-0+2+45+8-4,9-1+6-7-0+24-5+8*4,9-1+6-7*0+2*4+5*8-4,9-1+6-7*0+2*4*5+8-4,9-1+6-7*0-2*4*5+84,9-1+6-7*0*2*4+5*8+4,9-1+6-7*0*24+5*8+4,9-1+6-7*2+4+58-4,9-1+6-7*2-4+58+4,9-1+6*7+0+2*4*5-8*4,9-1+6*7+0*2+4*5-8-4,9-1+6*7+2*4*5-8*4,9-1+6*7-0+2*4*5-8*4,9-1+6*7-0*2+4*5-8-4,9-1+6*7*0+2+4+5*8+4,9-1+6*7*0-2+4*5+8*4,9-1+6*7*0*2-4+58-4,9-1+67+0-2*4-5-8+4,9-1+67+0-24-5+8+4,9-1+67+0*2*4-5-8-4,9-1+67+0*24-5-8-4,9-1+67-0-2*4-5-8+4,9-1+67-0-24-5+8+4,9-1+67-0*2*4-5-8-4,9-1+67-0*24-5-8-4,9-1+67-2*4-5-8+4,9-1+67-24-5+8+4,9-1+67*0+2+4+5*8+4,9-1+67*0-2+4*5+8*4,9-1+67*0*2-4+58-4,9-1-6+7+0*2+45+8-4,9-1-6+7-0*2+45+8-4,9-1-6+7*0-2+4+58-4,9-1-6+7*0-2-4+58+4,9-1-6+70+2-4*5+8-4,9-1-6+70-2+4*5-8*4,9-1-6+72-4*5+8-4,9-1-6+72*4-58*4,9-1-6-7*0-2+4+58-4,9-1-6-7*0-2-4+58+4,9-1-6*7*0+2+4+5*8+4,9-1-6*7*0-2+4*5+8*4,9-1-6*7*0*2-4+58-4,9-1-67*0+2+4+5*8+4,9-1-67*0-2+4*5+8*4,9-1-67*0*2-4+58-4,9-1*6+7+0-2-4+58-4,9-1*6+7+0*2+4+5*8+4,9-1*6+7-0-2-4+58-4,9-1*6+7-0*2+4+5*8+4,9-1*6+7-2-4+58-4,9-1*6+7*0-2+45+8+4,9-1*6+7*0-24-5+84,9-1*6+7*2+4+5+8*4,9-1*6+7*2+45-8+4,9-1*6+7*2*4-5+8-4,9-1*6+70-2+4-5-8-4,9-1*6+70-2-4-5-8+4,9-1*6+70-2-45+8*4,9-1*6+70-2*4+5-8-4,9-1*6+70-24+5+8-4,9-1*6+70*2+4-5-84,9-1*6-7+0+2*4+58-4,9-1*6-7+0-2-4*5+84,9-1*6-7+0*2*4+58+4,9-1*6-7+0*24+58+4,9-1*6-7+2*4+58-4,9-1*6-7-0+2*4+58-4,9-1*6-7-0-2-4*5+84,9-1*6-7-0*2*4+58+4,9-1*6-7-0*24+58+4,9-1*6-7-2-4*5+84,9-1*6-7*0-2+45+8+4,9-1*6-7*0-24-5+84,9-1*6*7+0-2+4+5+84,9-1*6*7-0-2+4+5+84,9-1*6*7-2+4+5+84,9-1*6*7*0*2+45+8-4,9-1*67+0+24*5-8+4,9-1*67+24*5-8+4,9-1*67-0+24*5-8+4,9-1*67*0*2+45+8-4,9-16+7+0+2*45-8*4,9-16+7+0*2+4+58-4,9-16+7+0*2-4+58+4,9-16+7+2*45-8*4,9-16+7-0+2*45-8*4,9-16+7-0*2+4+58-4,9-16+7-0*2-4+58+4,9-16+7*0-24+5+84,9-16+7*2*4+5+8-4,9-16+70-2+4+5-8-4,9-16+70-2-4+5-8+4,9-16+70*2+4+5-84,9-16-7+0+2*4*5+8*4,9-16-7+2*4*5+8*4,9-16-7-0+2*4*5+8*4,9-16-7*0-24+5+84,9-16*7+0+245-84,9-16*7+245-84,9-16*7-0+245-84,9-16*7*0*2+45+8-4,9-167*0*2+45+8-4,9*1+6+7+0+2*4*5-8+4,9*1+6+7+0+24*5-84,9*1+6+7+0-2*4+5*8+4,9*1+6+7+0*2*4+5*8-4,9*1+6+7+0*24+5*8-4,9*1+6+7+2*4*5-8+4,9*1+6+7+24*5-84,9*1+6+7-0+2*4*5-8+4,9*1+6+7-0+24*5-84,9*1+6+7-0-2*4+5*8+4,9*1+6+7-0*2*4+5*8-4,9*1+6+7-0*24+5*8-4,9*1+6+7-2*4+5*8+4,9*1+6+7*0+2+4+5+8*4,9*1+6+7*0+2+45-8+4,9*1+6-7+0+2+4+5*8+4,9*1+6-7+0-2+4*5+8*4,9*1+6-7+0*2-4+58-4,9*1+6-7+2+4+5*8+4,9*1+6-7-0+2+4+5*8+4,9*1+6-7-0-2+4*5+8*4,9*1+6-7-0*2-4+58-4,9*1+6-7-2+4*5+8*4,9*1+6-7*0+2+4+5+8*4,9*1+6-7*0+2+45-8+4,9*1+6-7*2+45+8+4,9*1+6-70+24+5+84,9*1+6*7+0+2+4+5-8+4,9*1+6*7+0+2-4+5+8-4,9*1+6*7+0+2*4-5+8-4,9*1+6*7+0+24-5-8-4,9*1+6*7+0*2*4-5+8+4,9*1+6*7+0*24-5+8+4,9*1+6*7+2+4+5-8+4,9*1+6*7+2-4+5+8-4,9*1+6*7+2*4-5+8-4,9*1+6*7+24-5-8-4,9*1+6*7-0+2+4+5-8+4,9*1+6*7-0+2-4+5+8-4,9*1+6*7-0+2*4-5+8-4,9*1+6*7-0+24-5-8-4,9*1+6*7-0*2*4-5+8+4,9*1+6*7-0*24-5+8+4,9*1+6*7*0*2+45+8-4,9*1+67+0-2-4*5+8-4,9*1+67-0-2-4*5+8-4,9*1+67-2-4*5+8-4,9*1+67*0*2+45+8-4,9*1+67*2+4-5-84,9*1-6+7+0-2-4+58-4,9*1-6+7+0*2+4+5*8+4,9*1-6+7-0-2-4+58-4,9*1-6+7-0*2+4+5*8+4,9*1-6+7-2-4+58-4,9*1-6+7*0-2+45+8+4,9*1-6+7*0-24-5+84,9*1-6+7*2+4+5+8*4,9*1-6+7*2+45-8+4,9*1-6+7*2*4-5+8-4,9*1-6+70-2+4-5-8-4,9*1-6+70-2-4-5-8+4,9*1-6+70-2-45+8*4,9*1-6+70-2*4+5-8-4,9*1-6+70-24+5+8-4,9*1-6+70*2+4-5-84,9*1-6-7+0+2*4+58-4,9*1-6-7+0-2-4*5+84,9*1-6-7+0*2*4+58+4,9*1-6-7+0*24+58+4,9*1-6-7+2*4+58-4,9*1-6-7-0+2*4+58-4,9*1-6-7-0-2-4*5+84,9*1-6-7-0*2*4+58+4,9*1-6-7-0*24+58+4,9*1-6-7-2-4*5+84,9*1-6-7*0-2+45+8+4,9*1-6-7*0-24-5+84,9*1-6*7+0-2+4+5+84,9*1-6*7-0-2+4+5+84,9*1-6*7-2+4+5+84,9*1-6*7*0*2+45+8-4,9*1-67+0+24*5-8+4,9*1-67+24*5-8+4,9*1-67-0+24*5-8+4,9*1-67*0*2+45+8-4,9*1*6+7+0+2+4-5-8+4,9*1*6+7+0+2-4-5+8-4,9*1*6+7+0+24+5-8*4,9*1*6+7+0*2+4+5-8-4,9*1*6+7+0*2-4+5-8+4,9*1*6+7+2+4-5-8+4,9*1*6+7+2-4-5+8-4,9*1*6+7+24+5-8*4,9*1*6+7-0+2+4-5-8+4,9*1*6+7-0+2-4-5+8-4,9*1*6+7-0+24+5-8*4,9*1*6+7-0*2+4+5-8-4,9*1*6+7-0*2-4+5-8+4,9*1*6+7*0*2*4*5+8-4,9*1*6+7*0*2*4*5*8+4,9*1*6+7*0*2*4*58+4,9*1*6+7*0*2*45+8-4,9*1*6+7*0*2*45*8+4,9*1*6+7*0*2*458+4,9*1*6+7*0*24*5+8-4,9*1*6+7*0*24*5*8+4,9*1*6+7*0*24*58+4,9*1*6+7*0*245+8-4,9*1*6+7*0*245*8+4,9*1*6+7*0*2458+4,9*1*6+70-2+4*5-84,9*1*6-7+0-2+4+5+8-4,9*1*6-7+0-2+45-8*4,9*1*6-7+0-2-4+5+8+4,9*1*6-7+0*2+4-5+8+4,9*1*6-7-0-2+4+5+8-4,9*1*6-7-0-2+45-8*4,9*1*6-7-0-2-4+5+8+4,9*1*6-7-0*2+4-5+8+4,9*1*6-7-2+4+5+8-4,9*1*6-7-2+45-8*4,9*1*6-7-2-4+5+8+4,9*1*6-7*0*2*4*5+8-4,9*1*6-7*0*2*4*5*8+4,9*1*6-7*0*2*4*58+4,9*1*6-7*0*2*45+8-4,9*1*6-7*0*2*45*8+4,9*1*6-7*0*2*458+4,9*1*6-7*0*24*5+8-4,9*1*6-7*0*24*5*8+4,9*1*6-7*0*24*58+4,9*1*6-7*0*245+8-4,9*1*6-7*0*245*8+4,9*1*6-7*0*2458+4,9*1*6*7*0+2*45-8*4,9*1*6*7*0*2+4+58-4,9*1*6*7*0*2-4+58+4,9*1*67*0+2*45-8*4,9*1*67*0*2+4+58-4,9*1*67*0*2-4+58+4,9*16+7+0*2-4-5-84,9*16+7-0*2-4-5-84,9*16+7*0-2*45+8-4,9*16+7*0-24-58-4,9*16-7+0-2-45-8*4,9*16-7+0*2*4+5-84,9*16-7+0*24+5-84,9*16-7-0-2-45-8*4,9*16-7-0*2*4+5-84,9*16-7-0*24+5-84,9*16-7-2-45-8*4,9*16-7*0-2*45+8-4,9*16-7*0-24-58-4,9*16*7*0+2*45-8*4,9*16*7*0*2+4+58-4,9*16*7*0*2-4+58+4,9*167*0+2*45-8*4,9*167*0*2+4+58-4,9*167*0*2-4+58+4,91+6+7+0+2-4-5*8-4,91+6+7+0+2*4-58+4,91+6+7+2-4-5*8-4,91+6+7+2*4-58+4,91+6+7-0+2-4-5*8-4,91+6+7-0+2*4-58+4,91+6+7*0+2-4-5-8*4,91+6+7*0+2-45+8-4,91+6+7*0*2+45-84,91+6-7+0*2+4-5*8+4,91+6-7+0*2-4*5-8-4,91+6-7+0*2*4*5-8*4,91+6-7+0*2*45-8*4,91+6-7+0*24*5-8*4,91+6-7+0*245-8*4,91+6-7-0*2+4-5*8+4,91+6-7-0*2-4*5-8-4,91+6-7-0*2*4*5-8*4,91+6-7-0*2*45-8*4,91+6-7-0*24*5-8*4,91+6-7-0*245-8*4,91+6-7*0+2-4-5-8*4,91+6-7*0+2-45+8-4,91+6-7*0*2+45-84,91+6-7*2*4+5+8+4,91+6-70+24-5+8+4,91+6-70-2+45-8-4,91+6-70-2-4+5+8*4,91+6-72+45-8-4,91+6-72-4+5+8*4,91+6*7+0+2-45-8*4,91+6*7+0*2+4+5-84,91+6*7+2-45-8*4,91+6*7-0+2-45-8*4,91+6*7-0*2+4+5-84,91+6*7*0-2-4+5-8*4,91+6*7*0-24-5-8+4,91+6*7*0*2+4-5-8*4,91+6*7*0*2-45+8+4,91+67*0-2-4+5-8*4,91+67*0-24-5-8+4,91+67*0*2+4-5-8*4,91+67*0*2-45+8+4,91-6+7+0-2+4-5*8+4,91-6+7+0-2-4*5-8-4,91-6+7-0-2+4-5*8+4,91-6+7-0-2-4*5-8-4,91-6+7-2+4-5*8+4,91-6+7-2-4*5-8-4,91-6+7*0*2*4+5-8*4,91-6+7*0*24+5-8*4,91-6+7*2-4-5-8*4,91-6+7*2-45+8-4,91-6+70-2*4-5-84,91-6-7+0+24-5*8-4,91-6-7+24-5*8-4,91-6-7-0+24-5*8-4,91-6-7*0*2*4+5-8*4,91-6-7*0*24+5-8*4,91-6-7*2+4-5-8-4,91-6-7*2-4-5-8+4,91-6-7*2-45+8*4,91-6-70+2+4+5+8*4,91-6-70+2+45-8+4,91-6*7+0+2*4+5-8+4,91-6*7+0-2+4-5+8+4,91-6*7+0-2*4+5+8+4,91-6*7+0*2*4+5+8-4,91-6*7+0*24+5+8-4,91-6*7+2*4+5-8+4,91-6*7-0+2*4+5-8+4,91-6*7-0-2+4-5+8+4,91-6*7-0-2*4+5+8+4,91-6*7-0*2*4+5+8-4,91-6*7-0*24+5+8-4,91-6*7-2+4-5+8+4,91-6*7-2*4+5+8+4,91-6*7*0-2-4+5-8*4,91-6*7*0-24-5-8+4,91-6*7*0*2+4-5-8*4,91-6*7*0*2-45+8+4,91-67+0+2+4*5+8+4,91-67+0+2-4+5*8-4,91-67+2+4*5+8+4,91-67+2-4+5*8-4,91-67-0+2+4*5+8+4,91-67-0+2-4+5*8-4,91-67*0-2-4+5-8*4,91-67*0-24-5-8+4,91-67*0*2+4-5-8*4,91-67*0*2-45+8+4,91*6-70-2+4-5*84,91*6-72+4-5*84,91*6*7*0+2*45-8*4,91*6*7*0*2+4+58-4,91*6*7*0*2-4+58+4,91*67*0+2*45-8*4,91*67*0*2+4+58-4,91*67*0*2-4+58+4,916*7*0+2*45-8*4,916*7*0*2+4+58-4,916*7*0*2-4+58+4,9167*0+2*45-8*4,9167*0*2+4+58-4,9167*0*2-4+58+4,-9+1+6+7*0+2+4+58-4,-9+1+6+7*0+2-4+58+4,-9+1+6+7*0+24+5*8-4,-9+1+6+70+2+4*5-8*4,-9+1+6+70-2-4*5+8+4,-9+1+6+72+4*5-8*4,-9+1+6-7*0+2+4+58-4,-9+1+6-7*0+2-4+58+4,-9+1+6-7*0+24+5*8-4,-9+1+6*7+0*2+4*5+8-4,-9+1+6*7-0*2+4*5+8-4,-9+1+6*7*0+2-4*5+84,-9+1+6*7*0*2+4+58+4,-9+1+6*70+2-45*8+4,-9+1+67+0+2+4+5-8-4,-9+1+67+0+2-4+5-8+4,-9+1+67+0+2*4-5-8+4,-9+1+67+0-2*4-5+8+4,-9+1+67+0*2*4-5+8-4,-9+1+67+0*24-5+8-4,-9+1+67+2+4+5-8-4,-9+1+67+2-4+5-8+4,-9+1+67+2*4-5-8+4,-9+1+67-0+2+4+5-8-4,-9+1+67-0+2-4+5-8+4,-9+1+67-0+2*4-5-8+4,-9+1+67-0-2*4-5+8+4,-9+1+67-0*2*4-5+8-4,-9+1+67-0*24-5+8-4,-9+1+67-2*4-5+8+4,-9+1+67*0+2-4*5+84,-9+1+67*0*2+4+58+4,-9+1-6+7+0-24+5+84,-9+1-6+7-0-24+5+84,-9+1-6+7-24+5+84,-9+1-6+7*0+2*4*5+8*4,-9+1-6+7*2+4+58-4,-9+1-6+7*2-4+58+4,-9+1-6-7+0+2+45+8*4,-9+1-6-7+0*2*4-5+84,-9+1-6-7+0*24-5+84,-9+1-6-7+2+45+8*4,-9+1-6-7-0+2+45+8*4,-9+1-6-7-0*2*4-5+84,-9+1-6-7-0*24-5+84,-9+1-6-7*0+2*4*5+8*4,-9+1-6*7+0+24*5-8-4,-9+1-6*7+24*5-8-4,-9+1-6*7-0+24*5-8-4,-9+1-6*7*0+2-4*5+84,-9+1-6*7*0*2+4+58+4,-9+1-67*0+2-4*5+84,-9+1-67*0*2+4+58+4,-9+1*6+7+0+2+4*5+8*4,-9+1*6+7+0-2*4+58+4,-9+1*6+7+0*2*4+58-4,-9+1*6+7+0*24+58-4,-9+1*6+7+2+4*5+8*4,-9+1*6+7-0+2+4*5+8*4,-9+1*6+7-0-2*4+58+4,-9+1*6+7-0*2*4+58-4,-9+1*6+7-0*24+58-4,-9+1*6+7-2*4+58+4,-9+1*6+7*0+24+5+8*4,-9+1*6+70+2-4+5-8-4,-9+1*6+70+2*4-5-8-4,-9+1*6+70-2*4-5+8-4,-9+1*6+72-4+5-8-4,-9+1*6-7+0+2+4+58+4,-9+1*6-7+0+24+5*8+4,-9+1*6-7+2+4+58+4,-9+1*6-7+24+5*8+4,-9+1*6-7-0+2+4+58+4,-9+1*6-7-0+24+5*8+4,-9+1*6-7*0+24+5+8*4,-9+1*6-7*2-4-5+84,-9+1*6-70+2+45+84,-9+1*6*7+0+2-4-5+8*4,-9+1*6*7+0+2*4+5+8+4,-9+1*6*7+0+24+5-8+4,-9+1*6*7+2-4-5+8*4,-9+1*6*7+2*4+5+8+4,-9+1*6*7+24+5-8+4,-9+1*6*7-0+2-4-5+8*4,-9+1*6*7-0+2*4+5+8+4,-9+1*6*7-0+24+5-8+4,-9+1*67+0*2*4*5*8*4,-9+1*67+0*2*4*5*84,-9+1*67+0*2*4*58*4,-9+1*67+0*2*4*584,-9+1*67+0*2*45*8*4,-9+1*67+0*2*45*84,-9+1*67+0*2*458*4,-9+1*67+0*2*4584,-9+1*67+0*24*5*8*4,-9+1*67+0*24*5*84,-9+1*67+0*24*58*4,-9+1*67+0*24*584,-9+1*67+0*245*8*4,-9+1*67+0*245*84,-9+1*67+0*2458*4,-9+1*67+0*24584,-9+1*67-0*2*4*5*8*4,-9+1*67-0*2*4*5*84,-9+1*67-0*2*4*58*4,-9+1*67-0*2*4*584,-9+1*67-0*2*45*8*4,-9+1*67-0*2*45*84,-9+1*67-0*2*458*4,-9+1*67-0*2*4584,-9+1*67-0*24*5*8*4,-9+1*67-0*24*5*84,-9+1*67-0*24*58*4,-9+1*67-0*24*584,-9+1*67-0*245*8*4,-9+1*67-0*245*84,-9+1*67-0*2458*4,-9+1*67-0*24584,-9+16+7+0+2*4+5*8-4,-9+16+7+0+2*4*5+8-4,-9+16+7+0-2*4*5+84,-9+16+7+0*2*4+5*8+4,-9+16+7+0*24+5*8+4,-9+16+7+2*4+5*8-4,-9+16+7+2*4*5+8-4,-9+16+7-0+2*4+5*8-4,-9+16+7-0+2*4*5+8-4,-9+16+7-0-2*4*5+84,-9+16+7-0*2*4+5*8+4,-9+16+7-0*24+5*8+4,-9+16+7-2*4*5+84,-9+16+7*0+2+45+8-4,-9+16+7*0+24-5+8*4,-9+16+70+2-4-5-8-4,-9+16+70+2*4+5-8*4,-9+16+72-4-5-8-4,-9+16-7+0+2*45-8*4,-9+16-7+0*2+4+58-4,-9+16-7+0*2-4+58+4,-9+16-7+2*45-8*4,-9+16-7-0+2*45-8*4,-9+16-7-0*2+4+58-4,-9+16-7-0*2-4+58+4,-9+16-7*0+2+45+8-4,-9+16-7*0+24-5+8*4,-9+16*7+0-2*4-5-8*4,-9+16*7-0-2*4-5-8*4,-9+16*7-2*4-5-8*4,-9-1+6+7+0-2+45+8+4,-9-1+6+7+0-24-5+84,-9-1+6+7-0-2+45+8+4,-9-1+6+7-0-24-5+84,-9-1+6+7-2+45+8+4,-9-1+6+7-24-5+84,-9-1+6+7*0+2*4+58-4,-9-1+6+7*0-2-4*5+84,-9-1+6+7*0*2*4+58+4,-9-1+6+7*0*24+58+4,-9-1+6+7*2+4+5*8+4,-9-1+6+70-2*4*5+8*4,-9-1+6-7*0+2*4+58-4,-9-1+6-7*0-2-4*5+84,-9-1+6-7*0*2*4+58+4,-9-1+6-7*0*24+58+4,-9-1+6-70+24*5+8+4,-9-1+6*7+0+2+4*5+8-4,-9-1+6*7+2+4*5+8-4,-9-1+6*7-0+2+4*5+8-4,-9-1+6*7*0+2+4+58+4,-9-1+6*7*0+24+5*8+4,-9-1+6*7*2-4*5+8-4,-9-1+6*72-45*8-4,-9-1+67+0+2*4+5-8-4,-9-1+67+0-2+4-5+8-4,-9-1+67+0-2-4-5+8+4,-9-1+67+0-2*4+5+8-4,-9-1+67+0*2*4+5-8+4,-9-1+67+0*24+5-8+4,-9-1+67+2*4+5-8-4,-9-1+67-0+2*4+5-8-4,-9-1+67-0-2+4-5+8-4,-9-1+67-0-2-4-5+8+4,-9-1+67-0-2*4+5+8-4,-9-1+67-0*2*4+5-8+4,-9-1+67-0*24+5-8+4,-9-1+67-2+4-5+8-4,-9-1+67-2-4-5+8+4,-9-1+67-2*4+5+8-4,-9-1+67*0+2+4+58+4,-9-1+67*0+24+5*8+4,-9-1+67*2-4-58-4,-9-1-6+70*2-4-58-4,-9-1-6-7+0-2+4-5+84,-9-1-6-7+0-2*4+5+84,-9-1-6-7-0-2+4-5+84,-9-1-6-7-0-2*4+5+84,-9-1-6-7-2+4-5+84,-9-1-6-7-2*4+5+84,-9-1-6*7*0+2+4+58+4,-9-1-6*7*0+24+5*8+4,-9-1-67*0+2+4+58+4,-9-1-67*0+24+5*8+4,-9-1*6+7+0+2-4*5+84,-9-1*6+7+0*2+4+58+4,-9-1*6+7+2-4*5+84,-9-1*6+7-0+2-4*5+84,-9-1*6+7-0*2+4+58+4,-9-1*6+7*0-2-4-5+84,-9-1*6+7*2*4+5+8+4,-9-1*6+70-2+4+5-8+4,-9-1*6+70-2-4+5+8-4,-9-1*6+70-24-5+8*4,-9-1*6-7*0-2-4-5+84,-9-16+7*0-2-4+5+84,-9-16+7*0*2+4-5+84,-9-16+7*2*4-5+8*4,-9-16+70+2+4-5+8+4,-9-16+70-24+5+8*4,-9-16+70*2-45-8-4,-9-16+72+4-5+8+4,-9-16-7*0-2-4+5+84,-9-16-7*0*2+4-5+84,-9-167+0-2+4+58*4,-9-167+0-2+4*58+4,-9-167-0-2+4+58*4,-9-167-0-2+4*58+4,-9-167-2+4+58*4,-9-167-2+4*58+4,-9*1+6+7+0+2+4*5+8*4,-9*1+6+7+0-2*4+58+4,-9*1+6+7+0*2*4+58-4,-9*1+6+7+0*24+58-4,-9*1+6+7+2+4*5+8*4,-9*1+6+7-0+2+4*5+8*4,-9*1+6+7-0-2*4+58+4,-9*1+6+7-0*2*4+58-4,-9*1+6+7-0*24+58-4,-9*1+6+7-2*4+58+4,-9*1+6+7*0+24+5+8*4,-9*1+6+70+2-4+5-8-4,-9*1+6+70+2*4-5-8-4,-9*1+6+70-2*4-5+8-4,-9*1+6+72-4+5-8-4,-9*1+6-7+0+2+4+58+4,-9*1+6-7+0+24+5*8+4,-9*1+6-7+2+4+58+4,-9*1+6-7+24+5*8+4,-9*1+6-7-0+2+4+58+4,-9*1+6-7-0+24+5*8+4,-9*1+6-7*0+24+5+8*4,-9*1+6-7*2-4-5+84,-9*1+6-70+2+45+84,-9*1+6*7+0+2-4-5+8*4,-9*1+6*7+0+2*4+5+8+4,-9*1+6*7+0+24+5-8+4,-9*1+6*7+2-4-5+8*4,-9*1+6*7+2*4+5+8+4,-9*1+6*7+24+5-8+4,-9*1+6*7-0+2-4-5+8*4,-9*1+6*7-0+2*4+5+8+4,-9*1+6*7-0+24+5-8+4,-9*1+67+0*2*4*5*8*4,-9*1+67+0*2*4*5*84,-9*1+67+0*2*4*58*4,-9*1+67+0*2*4*584,-9*1+67+0*2*45*8*4,-9*1+67+0*2*45*84,-9*1+67+0*2*458*4,-9*1+67+0*2*4584,-9*1+67+0*24*5*8*4,-9*1+67+0*24*5*84,-9*1+67+0*24*58*4,-9*1+67+0*24*584,-9*1+67+0*245*8*4,-9*1+67+0*245*84,-9*1+67+0*2458*4,-9*1+67+0*24584,-9*1+67-0*2*4*5*8*4,-9*1+67-0*2*4*5*84,-9*1+67-0*2*4*58*4,-9*1+67-0*2*4*584,-9*1+67-0*2*45*8*4,-9*1+67-0*2*45*84,-9*1+67-0*2*458*4,-9*1+67-0*2*4584,-9*1+67-0*24*5*8*4,-9*1+67-0*24*5*84,-9*1+67-0*24*58*4,-9*1+67-0*24*584,-9*1+67-0*245*8*4,-9*1+67-0*245*84,-9*1+67-0*2458*4,-9*1+67-0*24584,-9*1-6+7+0+2-4*5+84,-9*1-6+7+0*2+4+58+4,-9*1-6+7+2-4*5+84,-9*1-6+7-0+2-4*5+84,-9*1-6+7-0*2+4+58+4,-9*1-6+7*0-2-4-5+84,-9*1-6+7*2*4+5+8+4,-9*1-6+70-2+4+5-8+4,-9*1-6+70-2-4+5+8-4,-9*1-6+70-24-5+8*4,-9*1-6-7*0-2-4-5+84,-9*1*6+70+2+4+5*8-4,-9*1*6+70+2-4+5*8+4,-9*1*6+72+4+5*8-4,-9*1*6+72-4+5*8+4,-9*1*6*7*0+2*45-8*4,-9*1*6*7*0*2+4+58-4,-9*1*6*7*0*2-4+58+4,-9*1*67*0+2*45-8*4,-9*1*67*0*2+4+58-4,-9*1*67*0*2-4+58+4,-9*16+70+24*5+8+4,-9*16*7*0+2*45-8*4,-9*16*7*0*2+4+58-4,-9*16*7*0*2-4+58+4,-9*167*0+2*45-8*4,-9*167*0*2+4+58-4,-9*167*0*2-4+58+4,-91+6+7+0-24+5*8*4,-91+6+7-0-24+5*8*4,-91+6+7-24+5*8*4,-91+6+7*2+45+84,-91+6+70-2-4-5+84,-91+6+70*2+4-5+8-4,-91+6+70*2-4-5+8+4,-91+6-70+245-8*4,-91-6+70+2+4-5+84,-91-6+72+4-5+84,-91-6-7+0-2+4+5*8*4,-91-6-7+0-2+4*5*8+4,-91-6-7-0-2+4+5*8*4,-91-6-7-0-2+4*5*8+4,-91-6-7-2+4+5*8*4,-91-6-7-2+4*5*8+4,-91*6+70*2*4+5*8+4,-91*6*7*0+2*45-8*4,-91*6*7*0*2+4+58-4,-91*6*7*0*2-4+58+4,-91*67*0+2*45-8*4,-91*67*0*2+4+58-4,-91*67*0*2-4+58+4,-916*7*0+2*45-8*4,-916*7*0*2+4+58-4,-916*7*0*2-4+58+4,-9167*0+2*45-8*4,-9167*0*2+4+58-4,-9167*0*2-4+58+4

Incorrect!

contract description:

You are given the following string which contains only digits between 0 and 9:

 9167024584

 You are also given a target number of 58. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.

 The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:

 ["9167024584", 58]

 NOTE: Numbers in the expression cannot have leading 0's. In other words, "1+01" is not a valid expression Examples:

 Input: digits = "123", target = 6
 Output: [1+2+3, 1*2*3]

 Input: digits = "105", target = 5
 Output: [1*0+5, 10-5]

contract data: 9167024584,58 (object, 2 long)

number of tries remaining: 9

^^^^^^^^^^^^^^^^^^^^^^


vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-520538.cct on host n00dles

type: Find All Valid Math Expressions

Contract type 'Find All Valid Math Expressions' unrecognized!

contract description:

You are given the following string which contains only digits between 0 and 9:

 82180

 You are also given a target number of -90. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.

 The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:

 ["82180", -90]

 NOTE: Numbers in the expression cannot have leading 0's. In other words, "1+01" is not a valid expression Examples:

 Input: digits = "123", target = 6
 Output: [1+2+3, 1*2*3]

 Input: digits = "105", target = 5
 Output: [1*0+5, 10-5]

contract data: 82180,-90 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-197685.cct on host joesguns

type: Sanitize Parentheses in Expression

Contract type 'Sanitize Parentheses in Expression' unrecognized!

contract description:

Given the following string:

 )a)()(((())a

 remove the minimum number of invalid parentheses in order to validate the string. If there are multiple minimal ways to validate the string, provide all of the possible results. The answer should be provided as an array of strings. If it is impossible to validate the string the result should be an array with only an empty string.

 IMPORTANT: The string may contain letters, not just parentheses. Examples:
 "()())()" -> [()()(), (())()]
 "(a)())()" -> [(a)()(), (a())()]
 ")( -> [""]

contract data: )a)()(((())a (string, 12 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-183607.cct on host harakiri-sushi

type: Find All Valid Math Expressions

Contract type 'Find All Valid Math Expressions' unrecognized!

contract description:

You are given the following string which contains only digits between 0 and 9:

 694385979

 You are also given a target number of 31. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.

 The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:

 ["694385979", 31]

 NOTE: Numbers in the expression cannot have leading 0's. In other words, "1+01" is not a valid expression Examples:

 Input: digits = "123", target = 6
 Output: [1+2+3, 1*2*3]

 Input: digits = "105", target = 5
 Output: [1*0+5, 10-5]

contract data: 694385979,31 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^


vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-650985.cct on host clarkinc

type: Find All Valid Math Expressions

proposed answer: 7+0+0+6+7-9+5+1*2,7+0+0+6+7-9+5*1+2,7+0+0+6+7-9-5+12,7+0+0+6-7+9+5-1*2,7+0+0+6-7+9+5*1-2,7+0+0*6*7+9+5-1-2,7+0+0*67+9+5-1-2,7+0+6+7-9+5+1*2,7+0+6+7-9+5*1+2,7+0+6+7-9-5+12,7+0+6-7+9+5-1*2,7+0+6-7+9+5*1-2,7+0-0+6+7-9+5+1*2,7+0-0+6+7-9+5*1+2,7+0-0+6+7-9-5+12,7+0-0+6-7+9+5-1*2,7+0-0+6-7+9+5*1-2,7+0-0*6*7+9+5-1-2,7+0-0*67+9+5-1-2,7+0*0+6+7-9+5+1*2,7+0*0+6+7-9+5*1+2,7+0*0+6+7-9-5+12,7+0*0+6-7+9+5-1*2,7+0*0+6-7+9+5*1-2,7+0*0*6*7+9+5-1-2,7+0*0*67+9+5-1-2,7+0*6*7+9+5-1-2,7+0*67+9+5-1-2,7+0+6+7-9+5+1*2,7+0+6+7-9+5*1+2,7+0+6+7-9-5+12,7+0+6-7+9+5-1*2,7+0+6-7+9+5*1-2,7+0*6*7+9+5-1-2,7+0*67+9+5-1-2,7+6+7-9+5+1*2,7+6+7-9+5*1+2,7+6+7-9-5+12,7+6-7+9+5-1*2,7+6-7+9+5*1-2,7-0+0+6+7-9+5+1*2,7-0+0+6+7-9+5*1+2,7-0+0+6+7-9-5+12,7-0+0+6-7+9+5-1*2,7-0+0+6-7+9+5*1-2,7-0+0*6*7+9+5-1-2,7-0+0*67+9+5-1-2,7-0+6+7-9+5+1*2,7-0+6+7-9+5*1+2,7-0+6+7-9-5+12,7-0+6-7+9+5-1*2,7-0+6-7+9+5*1-2,7-0-0+6+7-9+5+1*2,7-0-0+6+7-9+5*1+2,7-0-0+6+7-9-5+12,7-0-0+6-7+9+5-1*2,7-0-0+6-7+9+5*1-2,7-0-0*6*7+9+5-1-2,7-0-0*67+9+5-1-2,7-0*0+6+7-9+5+1*2,7-0*0+6+7-9+5*1+2,7-0*0+6+7-9-5+12,7-0*0+6-7+9+5-1*2,7-0*0+6-7+9+5*1-2,7-0*0*6*7+9+5-1-2,7-0*0*67+9+5-1-2,7-0*6*7+9+5-1-2,7-0*67+9+5-1-2,7-0+6+7-9+5+1*2,7-0+6+7-9+5*1+2,7-0+6+7-9-5+12,7-0+6-7+9+5-1*2,7-0+6-7+9+5*1-2,7-0*6*7+9+5-1-2,7-0*67+9+5-1-2,7*0+0+6+7+9-5-1+2,7*0+0+6-7+9+5*1*2,7*0+0-6+7+9+5+1+2,7*0+0*6+7+9+5-1-2,7*0+6+7+9-5-1+2,7*0+6-7+9+5*1*2,7*0-0+6+7+9-5-1+2,7*0-0+6-7+9+5*1*2,7*0-0-6+7+9+5+1+2,7*0-0*6+7+9+5-1-2,7*0-6+7+9+5+1+2,7*0*0+6+7+9-5-1+2,7*0*0+6-7+9+5*1*2,7*0*0-6+7+9+5+1+2,7*0*0*6+7+9+5-1-2,7*0*6+7+9+5-1-2,7*0+6+7+9-5-1+2,7*0+6-7+9+5*1*2,7*0-6+7+9+5+1+2,7*0*6+7+9+5-1-2,7*6-7-9-5-1-2,70+0+6-7+9-5*12,70+0+6*7-95-1+2,70+0-6-7*9+5+12,70+0-67+9+5-1+2,70+6-7+9-5*12,70+6*7-95-1+2,70-0+6-7+9-5*12,70-0+6*7-95-1+2,70-0-6-7*9+5+12,70-0-67+9+5-1+2,70-6-7*9+5+12,70-67+9+5-1+2,70*0+6+7+9-5-1+2,70*0+6-7+9+5*1*2,70*0-6+7+9+5+1+2,70*0*6+7+9+5-1-2,70+6-7+9-5*12,70+6*7-95-1+2,70-6-7*9+5+12,70-67+9+5-1+2,76-7+9-5*12,-7+0+0+6+7+9+5-1*2,-7+0+0+6+7+9+5*1-2,-7+0+0+6+79-5*12,-7+0+0+6-7+9+5+12,-7+0+0+6*7-9-5-1-2,-7+0+0+67-9*5+1+2,-7+0+0-67+95-1-2,-7+0+6+7+9+5-1*2,-7+0+6+7+9+5*1-2,-7+0+6+79-5*12,-7+0+6-7+9+5+12,-7+0+6*7-9-5-1-2,-7+0+67-9*5+1+2,-7+0-0+6+7+9+5-1*2,-7+0-0+6+7+9+5*1-2,-7+0-0+6+79-5*12,-7+0-0+6-7+9+5+12,-7+0-0+6*7-9-5-1-2,-7+0-0+67-9*5+1+2,-7+0-0-67+95-1-2,-7+0-67+95-1-2,-7+0*0+6+7+9+5-1*2,-7+0*0+6+7+9+5*1-2,-7+0*0+6+79-5*12,-7+0*0+6-7+9+5+12,-7+0*0+6*7-9-5-1-2,-7+0*0+67-9*5+1+2,-7+0*0-67+95-1-2,-7+0+6+7+9+5-1*2,-7+0+6+7+9+5*1-2,-7+0+6+79-5*12,-7+0+6-7+9+5+12,-7+0+6*7-9-5-1-2,-7+0+67-9*5+1+2,-7+0-67+95-1-2,-7+6+7+9+5-1*2,-7+6+7+9+5*1-2,-7+6+79-5*12,-7+6-7+9+5+12,-7+6*7-9-5-1-2,-7+67-9*5+1+2,-7-0+0+6+7+9+5-1*2,-7-0+0+6+7+9+5*1-2,-7-0+0+6+79-5*12,-7-0+0+6-7+9+5+12,-7-0+0+6*7-9-5-1-2,-7-0+0+67-9*5+1+2,-7-0+0-67+95-1-2,-7-0+6+7+9+5-1*2,-7-0+6+7+9+5*1-2,-7-0+6+79-5*12,-7-0+6-7+9+5+12,-7-0+6*7-9-5-1-2,-7-0+67-9*5+1+2,-7-0-0+6+7+9+5-1*2,-7-0-0+6+7+9+5*1-2,-7-0-0+6+79-5*12,-7-0-0+6-7+9+5+12,-7-0-0+6*7-9-5-1-2,-7-0-0+67-9*5+1+2,-7-0-0-67+95-1-2,-7-0-67+95-1-2,-7-0*0+6+7+9+5-1*2,-7-0*0+6+7+9+5*1-2,-7-0*0+6+79-5*12,-7-0*0+6-7+9+5+12,-7-0*0+6*7-9-5-1-2,-7-0*0+67-9*5+1+2,-7-0*0-67+95-1-2,-7-0+6+7+9+5-1*2,-7-0+6+7+9+5*1-2,-7-0+6+79-5*12,-7-0+6-7+9+5+12,-7-0+6*7-9-5-1-2,-7-0+67-9*5+1+2,-7-0-67+95-1-2,-7-67+95-1-2,-7*0+0+6+7+9-5-1+2,-7*0+0+6-7+9+5*1*2,-7*0+0-6+7+9+5+1+2,-7*0+0*6+7+9+5-1-2,-7*0+6+7+9-5-1+2,-7*0+6-7+9+5*1*2,-7*0-0+6+7+9-5-1+2,-7*0-0+6-7+9+5*1*2,-7*0-0-6+7+9+5+1+2,-7*0-0*6+7+9+5-1-2,-7*0-6+7+9+5+1+2,-7*0*0+6+7+9-5-1+2,-7*0*0+6-7+9+5*1*2,-7*0*0-6+7+9+5+1+2,-7*0*0*6+7+9+5-1-2,-7*0*6+7+9+5-1-2,-7*0+6+7+9-5-1+2,-7*0+6-7+9+5*1*2,-7*0-6+7+9+5+1+2,-7*0*6+7+9+5-1-2,-7*6+7*9-5+1*2,-7*6+7*9-5*1+2,-70+0+6+79+5-1*2,-70+0+6+79+5*1-2,-70+0+6*7+9*5-1+2,-70+6+79+5-1*2,-70+6+79+5*1-2,-70+6*7+9*5-1+2,-70-0+6+79+5-1*2,-70-0+6+79+5*1-2,-70-0+6*7+9*5-1+2,-70*0+6+7+9-5-1+2,-70*0+6-7+9+5*1*2,-70*0-6+7+9+5+1+2,-70*0*6+7+9+5-1-2,-70+6+79+5-1*2,-70+6+79+5*1-2,-70+6*7+9*5-1+2

Incorrect!

contract description:

You are given the following string which contains only digits between 0 and 9:

 700679512

 You are also given a target number of 18. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.

 The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:

 ["700679512", 18]

 NOTE: Numbers in the expression cannot have leading 0's. In other words, "1+01" is not a valid expression Examples:

 Input: digits = "123", target = 6
 Output: [1+2+3, 1*2*3]

 Input: digits = "105", target = 5
 Output: [1*0+5, 10-5]

contract data: 700679512,18 (object, 2 long)

number of tries remaining: 9

^^^^^^^^^^^^^^^^^^^^^^


vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-386258-CyberSec.cct on host zb-institute

type: Find All Valid Math Expressions

Contract type 'Find All Valid Math Expressions' unrecognized!

contract description:

You are given the following string which contains only digits between 0 and 9:

 82053

 You are also given a target number of -36. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.

 The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:

 ["82053", -36]

 NOTE: Numbers in the expression cannot have leading 0's. In other words, "1+01" is not a valid expression Examples:

 Input: digits = "123", target = 6
 Output: [1+2+3, 1*2*3]

 Input: digits = "105", target = 5
 Output: [1*0+5, 10-5]

contract data: 82053,-36 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-735337.cct on host catalyst

type: Algorithmic Stock Trader II

Contract type 'Algorithmic Stock Trader II' unrecognized!

contract description:

You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:

 6,61,92,56,46

 Determine the maximum possible profit you can earn using as many transactions as you'd like. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.

 If no profit can be made, then the answer should be 0

contract data: 6,61,92,56,46 (object, 5 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-788575.cct on host alpha-ent

type: Find All Valid Math Expressions

Contract type 'Find All Valid Math Expressions' unrecognized!

contract description:

You are given the following string which contains only digits between 0 and 9:

 9259

 You are also given a target number of -16. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.

 The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:

 ["9259", -16]

 NOTE: Numbers in the expression cannot have leading 0's. In other words, "1+01" is not a valid expression Examples:

 Input: digits = "123", target = 6
 Output: [1+2+3, 1*2*3]

 Input: digits = "105", target = 5
 Output: [1*0+5, 10-5]

contract data: 9259,-16 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-112235-CyberSec.cct on host millenium-fitness

type: Unique Paths in a Grid I

Contract type 'Unique Paths in a Grid I' unrecognized!

contract description:

You are in a grid with 5 rows and 11 columns, and you are positioned in the top-left corner of that grid. You are trying to reach the bottom-right corner of the grid, but you can only move down or right on each step. Determine how many unique paths there are from start to finish.

 NOTE: The data returned for this contract is an array with the number of rows and columns:

 [5, 11]

contract data: 5,11 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-377290.cct on host defcomm

type: Total Ways to Sum

Contract type 'Total Ways to Sum' unrecognized!

contract description:

It is possible write four as a sum in exactly four different ways:

     3 + 1
     2 + 2
     2 + 1 + 1
     1 + 1 + 1 + 1

 How many different ways can the number 94 be written as a sum of at least two positive integers?

contract data: 94 (number, -1 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-871422-CyberSec.cct on host zeus-med

type: Unique Paths in a Grid II

Contract type 'Unique Paths in a Grid II' unrecognized!

contract description:

You are located in the top-left corner of the following grid:

 0,0,0,0,0,1,
0,0,0,0,0,0,
0,1,0,1,0,0,
0,0,0,0,0,1,
0,0,0,1,1,1,
0,0,0,0,0,0,
0,0,0,0,1,0,

 You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.

 Determine how many unique paths there are from start to finish.

 NOTE: The data returned for this contract is an 2D array of numbers representing the grid.

contract data: 0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0 (object, 7 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-343286-FourSigma.cct on host run4theh111z

type: Unique Paths in a Grid II

Contract type 'Unique Paths in a Grid II' unrecognized!

contract description:

You are located in the top-left corner of the following grid:

 0,0,0,0,0,0,1,0,0,0,1,
0,1,0,0,0,0,0,0,0,0,0,
0,0,0,1,1,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,1,0,0,1,0,
1,0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,1,1,0,0,0,0,
0,0,0,0,0,0,0,1,0,0,0,

 You are trying reach the bottom-right corner of the grid, but you can only move down or right on each step. Furthermore, there are obstacles on the grid that you cannot move onto. These obstacles are denoted by '1', while empty spaces are denoted by 0.

 Determine how many unique paths there are from start to finish.

 NOTE: The data returned for this contract is an 2D array of numbers representing the grid.

contract data: 0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0 (object, 10 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-381088.cct on host .

type: Find Largest Prime Factor

Contract type 'Find Largest Prime Factor' unrecognized!

contract description:

A prime factor is a factor that is a prime number. What is the largest prime factor of 27133381?

contract data: 27133381 (number, -1 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-778155.cct on host 4sigma

type: Algorithmic Stock Trader II

Contract type 'Algorithmic Stock Trader II' unrecognized!

contract description:

You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:

 33,198,57,38,16,5,94,182,47,180,98,65,10,88,131,72,49,56,33,51,121,15,58,8,36,73,63,32,159,154,5,190,64,116,136,156,138,179,68,130,165,65,58,183,27,143,153

 Determine the maximum possible profit you can earn using as many transactions as you'd like. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you buy it again.

 If no profit can be made, then the answer should be 0

contract data: 33,198,57,38,16,5,94,182,47,180,98,65,10,88,131,72,49,56,33,51,121,15,58,8,36,73,63,32,159,154,5,190,64,116,136,156,138,179,68,130,165,65,58,183,27,143,153 (object, 47 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-16656-FourSigma.cct on host b-and-a

type: Array Jumping Game

Contract type 'Array Jumping Game' unrecognized!

contract description:

You are given the following array of integers:

 0,9,0,6,0,4,9,7,6,1,2,0,1,4,2,10

 Each element in the array represents your MAXIMUM jump length at that position. This means that if you are at position i and your maximum jump length is n, you can jump to any position from i to i+n. 

Assuming you are initially positioned at the start of the array, determine whether you are able to reach the last index.

 Your answer should be submitted as 1 or 0, representing true and false respectively

contract data: 0,9,0,6,0,4,9,7,6,1,2,0,1,4,2,10 (object, 16 long)

number of tries remaining: 1

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-18528-CyberSec.cct on host b-and-a

type: Algorithmic Stock Trader IV

Contract type 'Algorithmic Stock Trader IV' unrecognized!

contract description:

You are given the following array with two elements:

 [4, [171,155,194,107,47,58,175,37,91,55,31,196,67,76,48,54,114,161,142,185,150,137,185,101,98,19,177,92,86,192,113,34,115,95,95,16,165,90,52,123,179,31,159,67,163,138,185,54]]

 The first element is an integer k. The second element is an array of stock prices (which are numbers) where the i-th element represents the stock price on day i.

 Determine the maximum possible profit you can earn using at most k transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you can buy it again.

 If no profit can be made, then the answer should be 0.

contract data: 4,171,155,194,107,47,58,175,37,91,55,31,196,67,76,48,54,114,161,142,185,150,137,185,101,98,19,177,92,86,192,113,34,115,95,95,16,165,90,52,123,179,31,159,67,163,138,185,54 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-725912-FourSigma.cct on host nwo

type: Algorithmic Stock Trader IV

Contract type 'Algorithmic Stock Trader IV' unrecognized!

contract description:

You are given the following array with two elements:

 [7, [158,4,161,60,144,75,116,115,53,9,162,54,155,124,188,164,127,98,1,74,149,84,126,167,67,112,187,61]]

 The first element is an integer k. The second element is an array of stock prices (which are numbers) where the i-th element represents the stock price on day i.

 Determine the maximum possible profit you can earn using at most k transactions. A transaction is defined as buying and then selling one share of the stock. Note that you cannot engage in multiple transactions at once. In other words, you must sell the stock before you can buy it again.

 If no profit can be made, then the answer should be 0.

contract data: 7,158,4,161,60,144,75,116,115,53,9,162,54,155,124,188,164,127,98,1,74,149,84,126,167,67,112,187,61 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-703963-CyberSec.cct on host megacorp

type: Find All Valid Math Expressions

Contract type 'Find All Valid Math Expressions' unrecognized!

contract description:

You are given the following string which contains only digits between 0 and 9:

 577773

 You are also given a target number of 91. Return all possible ways you can add the +, -, and * operators to the string such that it evaluates to the target number.

 The provided answer should be an array of strings containing the valid expressions. The data provided by this problem is an array with two elements. The first element is the string of digits, while the second element is the target number:

 ["577773", 91]

 NOTE: Numbers in the expression cannot have leading 0's. In other words, "1+01" is not a valid expression Examples:

 Input: digits = "123", target = 6
 Output: [1+2+3, 1*2*3]

 Input: digits = "105", target = 5
 Output: [1*0+5, 10-5]

contract data: 577773,91 (object, 2 long)

number of tries remaining: 10

^^^^^^^^^^^^^^^^^^^^^^



vvvvvvvvvvvvvvvvvvvvvv

reviewing contract contract-415984.cct on host ecorp

type: Algorithmic Stock Trader I

80,79,187,111,143,189,182,5,136,78,46,68,74,155,100,149,22,146,113,9,194,82,71,35,161,107

buy day 0, sell day 2 = 107

buy day 0, sell day 5 = 109

buy day 0, sell day 20 = 114

buy day 1, sell day 20 = 115

buy day 7, sell day 8 = 131

buy day 7, sell day 13 = 150

buy day 7, sell day 20 = 189

proposed answer: 189

Contract has 5 tries remaining! You'll have to solve it manually.

contract description:

You are given the following array of stock prices (which are numbers) where the i-th element represents the stock price on day i:

 80,79,187,111,143,189,182,5,136,78,46,68,74,155,100,149,22,146,113,9,194,82,71,35,161,107

 Determine the maximum possible profit you can earn using at most one transaction (i.e. you can only buy and sell the stock once). If no profit can be made then the answer should be 0. Note that you have to buy the stock before you can sell it

contract data: 80,79,187,111,143,189,182,5,136,78,46,68,74,155,100,149,22,146,113,9,194,82,71,35,161,107 (object, 26 long)

number of tries remaining: 5

^^^^^^^^^^^^^^^^^^^^^^
